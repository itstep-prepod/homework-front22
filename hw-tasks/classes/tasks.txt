1. Создать класс Programmer, инстанс которого обладает полями name, stack (массив строк, типа 
[«Python», «PHP», «Java»]), и методом code (который перебирает массив stack и выводит 
сообщения вида «Oleg is coding on Python», «Oleg is coding on PHP», «Oleg is coding on Java»). 
Метод code должен храниться в прототипе класса.
Переопределить метод toString у инстансов Programmer, чтобы они выводили сообщение вида 
«Hello my name is Oleg»

2.   Создать массив из 10 случайных инстансов Programmer, и отфильтровать их с помощью статического метода 
getSeniorDeveloper так, чтобы в результирующий массив попали только те Programmer, у которы длина массива 
stack больше 4.

3. Напишите функцию, которая вычисляет длину линий в
стандартной двухмерной системе координат. Координаты
начала и конца линий должны храниться в объектах.
 Создайте три линии.
 Вычислите их длины с помощью функции
 Проверьте, могут ли три линии сформировать
треугольник
Помните:
Длину линии можно найти по теореме Пифагора.
Стороны могут сформировать треугольник если длина
каждой стороны треугольника должны быть меньше суммы
длин остальных сторон.

4. Создать конструктор Car, который принимает параметры
model, color, price. Конструктор должен возвращать объект в
котором присутствуют вышеназванные поля со значениями.
Каждый представитель класса Car должен обладать методом
run() который выводит сообщение вида : MODEL + “ ” +
COLOR + ” is running”.

5. Создать конструктор Book, с помощью этого конструктора
создать массив из 8 книг (объектов). Каждая книга должна
представлять из себя объект, в котором есть три поля:
author, bookName, pageAmount.
Создать функцию getBiggerBook(), которая принимает
массив книг и возвращает ОДНУ книгу с наибольшим
количеством страниц

6. Создать класс Timer, инстанс которого запускает таймер и выводит в консоль
прошедшее время в секундах (1 2 3 4 5 и тд)
инстанс должен обладать методами .start() .stop() которые запускают и останавливают таймер
а также методом .reset() который сбрасывает таймер на 0.
С помощью Timer вы должны создать несколько таймеров и убедится в том, что они 
работают независимо друг от друга.
останавливайте таймер через некоторое время после запуска с помощью setTimeout()

7.// Создать класс Shop, инстанс которого обладает полем
// shopItems - массив объектов типа shopItem
// У инстанса класса Shop должен быть метод setSales(discountPercent),
// который устанавливает всем shopItem'ам isOnSale = true,
// а также снижает цену на discountPercent процентов.
// У инстанса также должен быть метод purchaseItem(itemName)
// которое находит в массиве shopItems, необходимый shopItem и уменьшает его
// количество на 1.
// Если количество shopItem равно нулю, то нужно выбросить ошибку о том, что
// айтемов больше нет в наличии. Обработайте эту ошибку и выведите в консоль
// сообщение что айтем нельзя заказать тк он закончился.
// У инстанса Shop также должно быть поле totalProfit - число (общее
// количество заработанных денег), в которое складывается
// цена каждого проданного айтема.

// Создать класс ShopItem, инстанс которого должен обладать полями
// itemName - название товара
// price - цена товара (не может быть меньше нуля, используйте сеттер)
// amount - количество товара (не может быть меньше нуля, используйте сеттер)
// isOnSale - булево значение

// Создать класс Clothes - который наследует от ShopItem
// инстанс должен обладать дополнительными полями
// size - строка характеризующая размер (может принимать значения только 'S', 'M', 'L', 'XL', обрабатывать
// сеттером, иначе выбрасывать ошибку)
// material - строка характеризующая материал
// color - строка цвета
// Класс Clothes, должен обладать статическим методом .changeColor(cloth, color)
// который принимает инстанс этого класса и цвет, метод меняет инстансу цвет на color;

// Создать класс TV который наследует от ShopItem
// инстанс должен обладать дополнительными полями
// diagonal - число
// withSmartTV - булево значение
// Оба поля должны быть недоступны для изменения, но доступны для чтения
// т.е. значения этих полей устанавливаются только в конструкторе, дальше сеттерами
// запрещаем их изменять

// Создать инстанс Shop и прокинуть в него несколько инстансов TV и Clothes
// проверить все методы на работоспособность